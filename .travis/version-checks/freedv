#!/usr/bin/env python3

"""Check for new versions of freedv by reading Github tags."""

import os
import sys

from github import Github

import semver

from pkgbuild import SRCINFO


# Get the versions on Github and the repository.
g = Github(os.environ.get("GITHUB_ACCESS_TOKEN"))
upstream = g.get_repo("drowe67/freedv-gui").get_tags()[0].name[1:]
current = SRCINFO("freedv/.SRCINFO").content["pkgver"]

print("Upstream version: %s" % upstream)
print("AUR version: %s" % current)

try:
    semver.parse(current)
except ValueError:
    current += ".0"

try:
    semver.parse(upstream)
except ValueError:
    upstream += ".0"


###############################################################################
###############################################################################
###############################################################################
# Handle blocking codec2 update.
import re
import requests

for _ in range(5):
    try:
        response = requests.get("https://www.archlinux.org/packages/community/x86_64/codec2/")
        response.raise_for_status()
        page = response.text
    except requests.RequestException:
        time.sleep(5)

regex = re.compile(r"codec2 \d+:(?P<version>\d+\.\d+\.\d+)-\d+")
codec2 = max([m.group("version") for m in regex.finditer(response.text)])
if codec2 != "0.8.1":
    print("codec2 was upgraded. Update version check and package.")
    sys.exit(1)
else:
    print("codec2 blocks update")
    sys.exit(0)
###############################################################################
###############################################################################
###############################################################################

if semver.compare(current, upstream) < 0:
    print("Package is out of date.")
    sys.exit(1)
elif semver.compare(current, upstream) > 0:
    print("Package is newer than upstream release.")
    sys.exit(1)
